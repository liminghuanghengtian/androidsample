apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.COMPILE_SDK_VERSION
    buildToolsVersion rootProject.ext.BUILD_TOOLS_VERSION
    defaultConfig {
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 自动编译JNI代码，指定模块名称
        ndk{
            moduleName "jni-test"
        }
        // JNI的代码在src/main/jni目录下，存放jni代码的目录必须为jni，如果不想采用，则如同以下方式来指定JNI的代码路径，jni.srcDirs制订了jni代码的路径
        sourceSets.main{
//            jni.srcDirs = []
            jni.srcDirs 'src/main/jni'
            jniLibs.srcDir "src/main/libs"
        }
    }
    // AS会把所有的CPU平台的so库都打包，现在只指定armeabi平台的so库
    productFlavors{
        arm{
            ndk{
                abiFilter "armeabi"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def supportVersion = rootProject.ext.SUPPORT_VERSION
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$supportVersion"
    testCompile 'junit:junit:4.12'
}
